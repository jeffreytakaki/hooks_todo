[{"/Users/jtakaki/Projects/react-hooks/hooks-todos/src/index.js":"1","/Users/jtakaki/Projects/react-hooks/hooks-todos/src/components/TodoList.js":"2","/Users/jtakaki/Projects/react-hooks/hooks-todos/src/context.js":"3","/Users/jtakaki/Projects/react-hooks/hooks-todos/src/reducer.js":"4","/Users/jtakaki/Projects/react-hooks/hooks-todos/src/components/TodoForm.js":"5"},{"size":557,"mtime":1609717285793,"results":"6","hashOfConfig":"7"},{"size":1350,"mtime":1609734024685,"results":"8","hashOfConfig":"7"},{"size":309,"mtime":1609720733687,"results":"9","hashOfConfig":"7"},{"size":2266,"mtime":1609733345443,"results":"10","hashOfConfig":"7"},{"size":1070,"mtime":1609720941930,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1s91hy0",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/Users/jtakaki/Projects/react-hooks/hooks-todos/src/index.js",[],"/Users/jtakaki/Projects/react-hooks/hooks-todos/src/components/TodoList.js",[],"/Users/jtakaki/Projects/react-hooks/hooks-todos/src/context.js",[],"/Users/jtakaki/Projects/react-hooks/hooks-todos/src/reducer.js",["23"],"/Users/jtakaki/Projects/react-hooks/hooks-todos/src/components/TodoForm.js",["24"],"import React, { useState, useContext, useEffect } from 'react'\nimport TodosContext from '../context'\n\n\nexport default function TodoForm() {\n    const [todo, setTodo] = useState(\"\")\n    const {state: { currentTodo = {} }, dispatch} = useContext(TodosContext)\n\n    useEffect(() => {\n        if(currentTodo.text) {\n            setTodo(currentTodo.text)\n        } else {\n            setTodo('')\n        }\n    }, [currentTodo.id])\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        if(currentTodo.text) {\n            dispatch({type: \"UPDATE_TODO\", payload: todo})\n        } else {\n            dispatch({type: \"ADD_TODO\", payload: todo})\n        }\n        \n        setTodo('')\n    }\n\n    return (\n        <form \n            className=\"flex justify-center p-5\"\n            onSubmit={handleSubmit}\n        >\n            <input \n                type='text' \n                className=\"border-black border-solid border-2\"\n                onChange={event => setTodo(event.target.value)}\n                value={todo}\n            />\n        </form>\n    )\n}",{"ruleId":"25","severity":1,"message":"26","line":1,"column":8,"nodeType":"27","messageId":"28","endLine":1,"endColumn":13},{"ruleId":"29","severity":1,"message":"30","line":15,"column":8,"nodeType":"31","endLine":15,"endColumn":24,"suggestions":"32"},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentTodo.text'. Either include it or remove the dependency array.","ArrayExpression",["33"],{"desc":"34","fix":"35"},"Update the dependencies array to be: [currentTodo.id, currentTodo.text]",{"range":"36","text":"37"},[408,424],"[currentTodo.id, currentTodo.text]"]